<main class="main">
  <h1>Games</h1>
  <input type="text" id="searchBar" placeholder="Search games..." />
  <div>
    <script type="text/javascript">
      atOptions = {
        key: "13def82c028e7c80ebeecd26958279a7",
        format: "iframe",
        height: 90,
        width: 728,
        params: {},
      };
    </script>
  </div>

  <div class="Uhh, not games ;)"></div>
</main>

<script defer>
  async function fetchGames() {
    try {
      const response = await fetch("./json/games.json");
      const games = await response.json();
      window.gamesData = games;

      displayGames(games);
      updateSearchBarPlaceholder(games.length);
    } catch (error) {
      console.error("Error fetching games:", error);
    }
  }

  function displayGames(games) {
    const gamesContainer = document.querySelector(".games");
    gamesContainer.innerHTML = "";

    const newTopGames = games.filter((game) => game.new || game.top);
    const otherGames = games.filter((game) => !game.new && !game.top);
    const allGames = [...newTopGames, ...otherGames];

    allGames.forEach((game) => {
      const gameDiv = document.createElement("div");
      gameDiv.className = "game";

      const gameImage = game.proxy
        ? `/media/games/${game.image}`
        : `/cdn/${game.url}/${game.image}`;
      gameDiv.innerHTML = `
        <img src="${gameImage}" alt="${game.name}" loading="lazy" width="200" height="200" />
        <p>${game.name}</p>
      `;

      if (game.new) {
        gameDiv.querySelector("p").innerHTML +=
          ' <span class="badge">New</span>';
      }
      if (game.top) {
        gameDiv.querySelector("p").innerHTML +=
          ' <span class="badge">Hot ðŸ”¥</span>';
      }
      if (game.exp) {
        gameDiv.querySelector("p").innerHTML +=
          ' <span class="badge">ðŸ§ª</span>';
      }
      if (game.updated) {
        gameDiv.querySelector("p").innerHTML +=
          ' <span class="badge">ðŸ†• Updated</span>';
      }

      const imageElement = gameDiv.querySelector("img");
      imageElement.addEventListener("click", () => {
        if (game.proxy) {
          sessionStorage.setItem(
            "lpurl",
            __uv$config.prefix + __uv$config.encodeUrl(game.url)
          );
          sessionStorage.setItem("rawurl", `${game.url}`);
          window.location.href = "/./go";
        } else {
          window.location.href = `./play?game=${game.url}`;
        }
        if (game.exp) {
          alert("this game is experimental ðŸ§ª");
        }
      });

      gamesContainer.appendChild(gameDiv);
    });
  }

  function searchGames(searchTerm) {
    const filteredGames = window.gamesData.filter((game) =>
      game.name.toLowerCase().includes(searchTerm.toLowerCase())
    );

    displayGames(filteredGames);
    updateSearchBarPlaceholder(filteredGames.length);
  }

  function updateSearchBarPlaceholder(count) {
    const searchBar = document.getElementById("searchBar");
    searchBar.placeholder = `Search for ${count} games`;
  }

  document.getElementById("searchBar").addEventListener("input", (event) => {
    searchGames(event.target.value);
  });

  fetchGames();
</script>
